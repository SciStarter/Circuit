{
    "openapi": "3.0.3",
    "info": {
        "title": "Circuit API v1",
        "version": "1.5.2",
        "description": ""
    },
    "servers": [
        {
            "url": "https://beta.sciencenearme.org/api/v1",
            "description": "Beta server on ScienceNearMe.org"
        },
        {
            "url": "https://sciencenearme.org/api/v1",
            "description": "API server on ScienceNearMe.org"
        }
    ],
    "components": {
        "schemas": {
            "participation": {
                "type": "object",
                "required": [
                    "opportunity",
                    "when",
                    "mode"
                ],
                "properties": {
                    "opportunity": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The UID which uniquely identifies the opportunity being participated in. This is the same value which was sent to and/or returned from the opportunity API endpoints."
                    },
                    "partner": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The UID which uniquely identifies the partner which reported this participation.",
                        "readOnly": true
                    },
                    "when": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when this participation action was completed."
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "signup",
                            "collect-data",
                            "analyze-data",
                            "organize"
                        ],
                        "description": "Which general category of participation the person performed."
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [],
                        "description": "Any additional keywords which may further refine the understanding of this participation."
                    },
                    "location": {
                        "type": "object",
                        "format": "point",
                        "description": "The point at which this participation occurred, represented as a [GeoJSON Point geometry](https://tools.ietf.org/html/rfc7946#section-3.1) object",
                        "nullable": true,
                        "writeOnly": true,
                        "default": null
                    }
                }
            },
            "opportunity_ref": {
                "type": "object",
                "required": [
                    "uid"
                ],
                "properties": {
                    "uid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The UID which uniquely identifies this opportunity."
                    },
                    "title": {
                        "type": "string",
                        "description": "The visible name which will identify this opportunity to participants",
                        "required": false,
                        "default": ""
                    },
                    "short_desc": {
                        "type": "string",
                        "description": "A short (120 character or less) \"elevator pitch\" for this opportunity.",
                        "required": false,
                        "default": ""
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "description": "The URL where an image associated with this opportunity may be found",
                        "required": false,
                        "default": ""
                    }
                }
            },
            "opportunity": {
                "type": "object",
                "required": [
                    "partner_name",
                    "title",
                    "partner_opp_url",
                    "description"
                ],
                "properties": {
                    "uid": {
                        "type": "string",
                        "format": "uuid",
                        "default": "0000-0000-0000-0000-000000000000",
                        "description": "The UID which uniquely identifies this opportunity. If omitted during opportunity creation, a UUID will be generated based on the partner_name, partner_opp_url, and title fields."
                    },
                    "title": {
                        "type": "string",
                        "description": "The visible name which will identify this opportunity to participants"
                    },
                    "description": {
                        "type": "string",
                        "description": "A textual description of the opportunity. One or two paragraphs is an ideal length."
                    },
                    "short_desc": {
                        "type": "string",
                        "description": "A short (120 character or less) \"elevator pitch\" for this opportunity.",
                        "required": false,
                        "default": ""
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "default": "",
                        "description": "The URL where an image associated with this opportunity may be found"
                    },
                    "image_credit": {
                        "type": "string",
                        "required": false,
                        "default": "",
                        "description": "Accreditation and/or copyright acknowledgment for the image"
                    },
                    "partner_opp_url": {
                        "type": "string",
                        "format": "url",
                        "description": "The URL where the partner wishes participants to be directed for this opportunity"
                    },
                    "partner_name": {
                        "type": "string",
                        "description": "The name to use to identify the originating partner for this opportunity. This is not necessarily the name of the partner making the API call; for example, partner A may be serving as a proxy for partner B"
                    },
                    "partner_website": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The URL for the partner's main web site"
                    },
                    "partner_logo_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The URL for an image file to use to represent the partner to users."
                    },
                    "partner_created": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date and time when the partner's record of this opportunity was created"
                    },
                    "partner_updated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date and time when the partner's record of this opportuity was last updated"
                    },
                    "organization_name": {
                        "type": "string",
                        "default": "",
                        "description": "The name of the organization which is hosting this opportunity"
                    },
                    "organization_type": {
                        "type": "string",
                        "enum": [
                            "museum_or_science_center",
                            "festival",
                            "library",
                            "college_university",
                            "pk12school",
                            "community_organization",
                            "club",
                            "zoo",
                            "acquarium",
                            "planetarium",
                            "botanical_garden",
                            "parks_and_rec",
                            "historical_site",
                            "maker_organization",
                            "company",
                            "govt_agency",
                            "maker_space",
                            "unspecified"
                        ],
                        "default": "unspecified",
                        "description": "The type of organization that is hosting this opportunity"
                    },
                    "organization_website": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The URL of the hosting organization's web site"
                    },
                    "organization_logo_url": {
                        "type": "string",
                        "format": "url",
                        "nullable": true,
                        "description": "The URL of an image to use for representing the organization"
                    },
                    "entity_type": {
                        "type": "string",
                        "enum": [
                            "opportunity",
                            "attraction",
                            "unspecified"
                        ],
                        "default": "opportunity",
                        "description": "Opportunities are scheduled, while attractions are ongoing"
                    },
                    "opp_venue": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "indoors",
                                "outdoors"
                            ]
                        },
                        "default": [],
                        "description": "Description of the facility or facilities physically hosting this opportunity"
                    },
                    "opp_topics": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "agriculture",
                                "animals",
                                "archaeology_and_cultural",
                                "art",
                                "astronomy_and_space",
                                "awards",
                                "biology",
                                "birds",
                                "chemistry",
                                "climate_and_weather",
                                "computers_and_technology",
                                "crowd_funding",
                                "design",
                                "disaster_response",
                                "ecology_and_environment",
                                "education",
                                "engineering",
                                "food",
                                "general_science",
                                "geography",
                                "geology_and_earth_science",
                                "health_and_medicine",
                                "insects_and_pollinators",
                                "mathematics",
                                "nature_and_outdoors",
                                "ocean_water_marine",
                                "paleontology",
                                "physics",
                                "policy",
                                "psychology",
                                "religion",
                                "robotics",
                                "social_science",
                                "sound",
                                "technology",
                                "transportation"
                            ]
                        },
                        "default": [],
                        "description": "Topics applicable to this opportunity"
                    },
                    "opp_descriptor": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "advocacy_days",
                                "bioblitz",
                                "camp",
                                "citizen_science",
                                "clean_up",
                                "club",
                                "community",
                                "competition",
                                "concert",
                                "conference",
                                "create-a-thon",
                                "dance",
                                "exhibition",
                                "expo_style",
                                "festival",
                                "forum",
                                "fundraising",
                                "hack-a-thon",
                                "lecture",
                                "live_science",
                                "make-a-thon",
                                "maker",
                                "maker_faire",
                                "media",
                                "outreach",
                                "overnight",
                                "panel",
                                "policy",
                                "professional_development",
                                "research",
                                "science_blogging",
                                "science_cafe_or_pub",
                                "science_on_tap",
                                "science_poetry_slam",
                                "science_slam",
                                "service",
                                "star_party",
                                "story_collider",
                                "story_collider",
                                "tinker",
                                "tinker_faire",
                                "training",
                                "volunteering",
                                "workshop"
                            ]
                        },
                        "default": [],
                        "description": "Description of the opportunity based on established typology"
                    },
                    "min_age": {
                        "type": "integer",
                        "description": "The youngest age, in years, that the opportunity is suitable for. 0 means no lower age limit",
                        "default": 0
                    },
                    "max_age": {
                        "type": "integer",
                        "description": "The oldest age, in years, that the opportunity is suitable for. 999 means no uper age limit",
                        "default": 999
                    },
                    "pes_domain": {
                        "type": "string",
                        "enum": [
                            "citizen_science",
                            "live_science",
                            "museum_or_science_center",
                            "maker",
                            "policy",
                            "out_of_school_time_program",
                            "formal_education",
                            "science_communications",
                            "unspecified"
                        ],
                        "default": "unspecified",
                        "description": "The high-level domain of Public Engagement in Science that this opportunity best fits into"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [],
                        "description": "Arbitrary set of tags which describe this opportunity"
                    },
                    "ticket_required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Participation requires a ticket"
                    },
                    "start_datetimes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "default": [],
                        "description": "Dates and times at which the opportunity begins"
                    },
                    "has_end": {
                        "type": "boolean",
                        "default": false,
                        "description": "The start dates and times are paired with end dates and times in the end_dates field"
                    },
                    "end_datetimes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "default": [],
                        "description": "Dates and times at which the opportunity ends. Each entry in end_datetimes should be paired with the corresponding entry in start_datetimes, so an opportunity might begin at start_datetimes[2] and end at end_datetimes[2]"
                    },
                    "recurrence": {
                        "type": "string",
                        "enum": [
                            "once",
                            "daily",
                            "weekly"
                        ],
                        "default": "once",
                        "description": "If set to a value other than 'once', the opportunity start_datetimes and end_datetimes in conjunction with the recurrence period will be used to create additional instances of the opportunity as time passes."
                    },
                    "end_recurrence": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "default": null,
                        "description": "The recurrence will cease once it hits a date and time beyond this value, if not null"
                    },
                    "timezone": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "description": "The timezone for the opportunity, as an 'America/Los_Angeles' style timezonedb name; used to adjust times for daylight savings time in recurring opportunities"
                    },
                    "attraction_hours": {
                        "deprecated": true,
                        "type": "object",
                        "properties": {
                            "monday": {
                                "type": "object",
                                "properties": {
                                    "opens": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:30:00-05:00"
                                    },
                                    "closes": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00-05:00"
                                    }
                                },
                                "nullable": true
                            },
                            "tuesday": {
                                "type": "object",
                                "properties": {
                                    "opens": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:30:00+00:00"
                                    },
                                    "closes": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00+00:00"
                                    }
                                },
                                "nullable": true
                            },
                            "wednesday": {
                                "type": "object",
                                "properties": {
                                    "opens": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:30:00Z"
                                    },
                                    "closes": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00Z"
                                    }
                                },
                                "nullable": true
                            },
                            "thursday": {
                                "type": "object",
                                "properties": {
                                    "opens": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:30:00Z"
                                    },
                                    "closes": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00Z"
                                    }
                                },
                                "nullable": true
                            },
                            "friday": {
                                "type": "object",
                                "properties": {
                                    "opens": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:30:00Z"
                                    },
                                    "closes": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00Z"
                                    }
                                },
                                "nullable": true
                            },
                            "saturday": {
                                "type": "object",
                                "properties": {
                                    "opens": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:30:00Z"
                                    },
                                    "closes": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00Z"
                                    }
                                },
                                "nullable": true
                            },
                            "sunday": {
                                "type": "object",
                                "properties": {
                                    "opens": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:30:00Z"
                                    },
                                    "closes": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00Z"
                                    }
                                },
                                "nullable": true
                            }
                        },
                        "nullable": true,
                        "description": "Attractions don't have start dates and end dates, but they do have open and close times on different days of the week. The attraction_hours field should only be used if the opportunity not tied to specific dates (and specific times on those dates), but instead is always available, subject to the schedule described here."
                    },
                    "cost": {
                        "type": "string",
                        "enum": [
                            "free",
                            "cost",
                            "unknown"
                        ],
                        "default": "free",
                        "description": "Whether participants have a cost associated with participating in this opportunity"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "rfc5646"
                        },
                        "default": [
                            "en-US"
                        ],
                        "description": "The languages the opportunity will be presented in"
                    },
                    "is_online": {
                        "type": "boolean",
                        "default": false,
                        "description": "The opportunity is presented entirely online, with no in-person component"
                    },
                    "location_type": {
                        "type": "string",
                        "enum": [
                            "any",
                            "at",
                            "near",
                            "unknown"
                        ],
                        "default": "any",
                        "description": "Display the opportunity as begin available anywhere (any), at an address (at), within a region (near), or unknown"
                    },
                    "location_name": {
                        "type": "string",
                        "default": "",
                        "description": "If the location_type is 'at' or 'near' the value of this field will be used to help participants identify the opportunity location"
                    },
                    "location_point": {
                        "type": "object",
                        "format": "point",
                        "description": "The point at which this opportunity is centered, represented as a [GeoJSON Point geometry](https://tools.ietf.org/html/rfc7946#section-3.1) object",
                        "nullable": true
                    },
                    "location_polygon": {
                        "type": "object",
                        "format": "multipolygon",
                        "description": "The region within which this opportunity is available, represented as a [GeoJSON MultiPolygon geometry](https://tools.ietf.org/html/rfc7946#section-3.1) object",
                        "nullable": true
                    },
                    "address_street": {
                        "type": "string",
                        "default": "",
                        "description": "The street part of the address for this opportunity"
                    },
                    "address_city": {
                        "type": "string",
                        "default": "",
                        "description": "The city part of the address for this opportunity"
                    },
                    "address_state": {
                        "type": "string",
                        "default": "",
                        "description": "The state or province part of the address for this opportunity"
                    },
                    "address_country": {
                        "type": "string",
                        "default": "",
                        "description": "The country part of the address for this opportunity"
                    },
                    "address_zip": {
                        "type": "string",
                        "default": "",
                        "description": "The zip or postal code part of the address for this opportunity"
                    },
                    "opp_hashtags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [],
                        "description": "Hashtags to use when advertising this opportunity on social media"
                    },
                    "opp_social_handles": {
                        "type": "object",
                        "default": {},
                        "description": "Handles to use when advertising this opportunity on social media. e.g. {\"twitter\": \"@SciStarter\"}"
                    },
                    "partner": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Automatically set to the UID used for authorization when the opportunity was added.",
                        "readOnly": true
                    },
                    "accepted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether this opportunity has been accepted for publication"
                    },
                    "withdrawn": {
                        "type": "boolean",
                        "default": false,
                        "description": "If set to true, this opportunity is not visible to the public"
                    },
                    "contact_name": {
                        "type": "string",
                        "default": "",
                        "description": "The name of the person who should be contacted for administrative reasons regarding this opportunity. NOT PUBLISHED."
                    },
                    "contact_email": {
                        "type": "string",
                        "format": "email",
                        "default": "",
                        "description": "The email of the person who should be contacted for administrative reasons regarding this opportunity. NOT PUBLISHED."
                    },
                    "contact_phone": {
                        "type": "string",
                        "format": "phone",
                        "default": "",
                        "description": "The phone number of the person who should be contacted for administrative reasons regarding this opportunity. NOT PUBLISHED."
                    },
                    "extra_data": {
                        "type": "object",
                        "default": {},
                        "description": "Any additional information which should be stored as part of this opportunity record"
                    }
                }
            },
            "error": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "token": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/partner/authorize": {
            "post": {
                "summary": "Use a partner UID and secret to retrieve an authorization token",
                "operationId": "partner_authorize",
                "requestBody": {
                    "description": "Partner UID and secret for authentication",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "uid",
                                    "secret"
                                ],
                                "properties": {
                                    "uid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "secret": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An authorization token which will remain valid for six hours after authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "format": "JWT"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrectly formatted request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "UID is invalid or secret is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Other error"
                    }
                }
            }
        },
        "/opportunity/recommend": {
            "get": {
                "summary": "Retrieve references to opportunities recommended based on the query parameters",
                "operationId": "opportunity_recommend",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "An optional authorization bearer header containing an unexpired token returned from the /partner/authorize endpoint",
                        "required": false
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "explode": true,
                        "required": false,
                        "description": "Can be added to the query parameters multiple times. Each tags[] parameter specifies a single tag which will guide the recommendations."
                    },
                    {
                        "name": "topics[]",
                        "in": "query",
                        "explode": true,
                        "required": false,
                        "description": "Can be added to the query parameters multiple times. Each topics[] parameter specifies a single topic while will guide the recommendations. See the topic field in the opportunity schema for valid values."
                    },
                    {
                        "name": "abstract",
                        "in": "query",
                        "description": "A short-ish section of text which will be used to guide the recommendations",
                        "required": false
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "GPS X coordinate of a location of interest that will be used to guide the recommendations",
                        "required": false
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "GPS Y coordinate of a location of interest that will be used to guide the recommendations",
                        "required": false
                    }
                ],
                "security": [
                    {},
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produces a list of references to opportunities recommended based on the provided parameters. The UID values of the references can be used to access more complete information about specific opportunities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "recommended": {
                                            "type": "array",
                                            "default": [],
                                            "items": {
                                                "$ref": "#/components/schemas/opportunity_ref"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization token did not grant access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunity/": {
            "get": {
                "summary": "Retrieve references to opportunities matching the query parameters",
                "operationId": "opportunity_search",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "An authorization bearer header containing an unexpired token returned from the /partner/authorize endpoint",
                        "required": false
                    },
                    {
                        "name": "accepted",
                        "in": "query",
                        "default": true,
                        "required": false,
                        "description": "If provided, narrow the search to opportunities that have been accepted (for accepted=true) or not accepted (for accepted=false). This parameter is ignored unless the request has the Authorization header and the authorized parther is also the partner being queried. In other words, you can only specify this parameter if you are searching for your own opportunities."
                    },
                    {
                        "name": "withdrawn",
                        "in": "query",
                        "default": false,
                        "required": false,
                        "description": "If provided, narrow the search to opportunities that have been withdrawn from publication (for withdrawn=true) or not withdrawn (for withdrawn=false). This parameter is ignored unless the request has the Authorization header and the authorized parther is also the partner being queried. In other words, you can only specify this parameter if you are searching for your own opportunities."
                    },
                    {
                        "name": "title_contains",
                        "in": "query",
                        "required": false,
                        "description": "If provided, narrow the search to opportunities that contain the parameter value as a (case insensitive) substring of their title."
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "explode": true,
                        "required": false,
                        "description": "Can be added to the query parameters multiple times. Each tags[] parameter specifies a single tag which must be present on all matching opportunities."
                    },
                    {
                        "name": "topics[]",
                        "in": "query",
                        "explode": true,
                        "required": false,
                        "description": "Can be added to the query parameters multiple times. Each topics[] parameter specifies a single topic which must be present on all matching opportunities. See the topic field in the opportunity schema for valid values."
                    },
                    {
                        "name": "partner",
                        "in": "query",
                        "required": false,
                        "format": "uuid",
                        "description": "If provided, narrow the search to opportunities provided by a specific partner. The parameter value should be the partner uid. If the partner is also the party authorized by the Authorization header, enables the accepted and withdrawn parameters."
                    }
                ],
                "security": [
                    {},
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produces a list of references to opportunities matching all of the provided parameters. The UID values of the references can be used to access more complete information about specific opportunities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "matches": {
                                            "type": "array",
                                            "default": [],
                                            "items": {
                                                "$ref": "#/components/schemas/opportunity_ref"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization token did not grant access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new opportunity record",
                "operationId": "opportunity_new",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "An authorization bearer header containing an unexpired token returned from the /partner/authorize endpoint",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "requestBody": {
                    "description": "Values to store as a new opportunity. Note that while most of the opportunity data fields are optional, sparsely described opportunities may not be accepted for publication.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/opportunity"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Opportunity as stored by the server, after defaults have been applied, and validation performed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The opportunity did not pass validation checks, or the request could not be parsed at all",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization header was not provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization token did not grant access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The provided UID is already in use by an opportunity. If a UID was not provided, then one was generated by hashing the partner_name and title fields, and that UID is a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunity/{uid}": {
            "put": {
                "summary": "Update an opportunity record",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "The UID of the opportunity to be stored",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "An authorization bearer header containing an unexpired token returned from the /partner/authorize endpoint",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/opportunity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The opportunity record was updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error while validating the opportunity object, or the request was badly structured overall",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization header was not provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization token did not grant access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No opportunity is identified by that UID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Retrieve an opportunity record",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "The UID of the opportunity to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "An authorization bearer header containing an unexpired token returned from the /partner/authorize endpoint",
                        "required": false
                    }
                ],
                "security": [
                    {},
                    {
                        "token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The public content of the opportunity record, or the complete content if the request is authorized to access it.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization token was provided but did not grant access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No opportunity is identified by that UID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/participation/{hash}": {
            "post": {
                "summary": "Create a record of a person's participation in an opportunity at a particular time",
                "operationId": "participation_new",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "A **cryptographic hash** of the participant's email address. This non-reversible encoding allows consenting participants to be recognized *without* violating the privacy of other participants. This value is computed as ASCII_LOWERCASE(HEXIDECIMAL(SHA256(ASCII_LOWERCASE(TRIM_WHITESPACE(UTF8(email))) + \":science-link\")))",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "hexidecimal"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "An authorization bearer header containing an unexpired token returned from the /partner/authorize endpoint",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "requestBody": {
                    "description": "Values to store as a new participation record.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/participation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Public part of the participation record as stored by the server, after defaults have been applied, and validation performed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/participation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrectly formatted request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization header was not provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The opportunity is managed by a different partner",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Participant or opportunity does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
